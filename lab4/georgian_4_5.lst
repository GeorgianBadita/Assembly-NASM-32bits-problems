     1                                  ;Badita Marin-Georgian, grupa 211, 10/24/2017, laboratorul 4, problema 5, op pe biti
     2                                  
     3                                  
     4                                  ;Se dau octetii A si B. Sa se obtina dublucuvantul C:
     5                                  ;bitii 16-31 ai lui C sunt 1
     6                                  ;bitii 0-3 ai lui C coincid cu bitii 3-6 ai lui B
     7                                  ;bitii 4-7 ai lui C au valoarea 0
     8                                  ;bitii 8-10 ai lui C au valoarea 110
     9                                  ;bitii 11-15 ai lui C coincid cu bitii 0-4 ai lui A
    10                                  
    11                                  bits 32
    12                                  
    13 00000000 57                          a db 01010111b
    14 00000001 BE                          b db 10111110b
    15 00000002 00000000                    c dd 0
    16                                  
    17                                  global start        
    18                                     
    19                                  extern exit              
    20                                  import exit msvcrt.dll
    21                                  segment data use32 class=data
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                         
    27 00000000 BB00000000                      mov EBX, 0 ;in EBX vom calcula rezultatul
    28                                          
    29 00000005 A1[02000000]                    mov EAX, [c]
    30 0000000A 0D0000FFFF                      or EAX, 11111111111111110000000000000000b ;Schimbam bitii 16 - 31 ai lui C in 1
    31                                          
    32 0000000F 89C3                            mov EBX, EAX ;punem in BX rezultatul de pana acum
    33                                          
    34 00000011 A0[01000000]                    mov AL, [b]; Al = b
    35 00000016 2478                            and AL, 01111000b ;izolam bitii 3 - 6 ai lui b
    36 00000018 B103                            mov CL, 3 ;CL = 3
    37 0000001A D2C8                            ror AL, CL ;rotim 3 pozitii spre dreapta
    38 0000001C 6698                            cbw ;convert AL -> AX
    39 0000001E 6699                            cwd ;convert AX -> EAX
    40 00000020 09C3                            or EBX, EAX ;punem in EBX rezultatul
    41                                          
    42 00000022 81E30FFFFFFF                    and EBX, 11111111111111111111111100001111b ;facem bitii 4-7 din rezultat sa fie 0
    43                                          
    44 00000028 B800060000                      mov EAX, 00000000000000000000011000000000b ;punem in EAX masca
    45 0000002D 09C3                            or EBX, EAX ;punem in bitii 8 - 11 valoarea 110
    46                                          
    47 0000002F B800000000                      mov EAX, 0
    48 00000034 A0[00000000]                    mov AL, [a] ;AL = a
    49 00000039 2417                            and AL, 00010111b ;izolam bitii 0 - 4 ai lui a
    50 0000003B 6698                            cbw ;convertim AL -> AX
    51 0000003D 6699                            cwd ;convertim AX -> EAX
    52 0000003F B10B                            mov CL, 11 ;CL = 11
    53 00000041 D3C0                            rol EAX, CL ;deplasam bitii 11 pozitii spre stanga
    54 00000043 09C3                            or EBX, EAX ;punem bitii in rezultat
    55                                          
    56 00000045 C705[02000000]0A00-             mov [c], DWORD 10
    56 0000004D 0000               
    57 0000004F 6A00                            push    dword 0      
    58 00000051 FF15[00000000]                  call    [exit]      
