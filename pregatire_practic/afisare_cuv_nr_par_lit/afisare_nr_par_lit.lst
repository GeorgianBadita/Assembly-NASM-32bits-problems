     1                                  ;Se da un nume de fisier, si un text cu spatii, se cere sa se afiseze pe ecran cuvintele din text care au numar par de litere
     2                                  
     3                                  bits 32 
     4                                  
     5                                  
     6                                  global start        
     7                                  
     8                                  
     9                                  extern exit, fopen, fclose, fread, scanf, printf
    10                                  import exit msvcrt.dll    
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  import scanf msvcrt.dll
    15                                  import printf msvcrt.dll
    16                                  
    17                                  segment data use32 class=data
    18                                      ; ...
    19                                      len equ 100
    20                                      len_fis equ 20
    21 00000000 FFFFFFFF                    descriptor_fis dd -1
    22 00000004 00<rept>                    buffer times len+1 db 0
    23 00000069 722B00                      mod_access db "r+", 0
    24 0000006C 00<rept>                    nume_fisier times len_fis+1 db 0
    25 00000081 257300                      mod_citire db "%s", 0
    26 00000084 25730A0D00                  mod_print db "%s", 10, 13, 0
    27 00000089 45726F617265206C61-         eroare_ db "Eroare la deschiderea fisierului", 0
    27 00000092 206465736368696465-
    27 0000009B 726561206669736965-
    27 000000A4 72756C756900       
    28 000000AA 00<rept>                    rez times len_fis+1 db 0
    29                                      
    30                                  segment code use32 class=code
    31                                      start:
    32                                          
    33 00000000 68[6C000000]                    push DWORD nume_fisier
    34 00000005 68[81000000]                    push DWORD mod_citire
    35 0000000A FF15[00000000]                  call [scanf]
    36 00000010 83C408                          add ESP, 4*2
    37                                          
    38                                          
    39 00000013 68[69000000]                    push DWORD mod_access
    40 00000018 68[6C000000]                    push DWORD nume_fisier
    41 0000001D FF15[00000000]                  call [fopen]
    42 00000023 83C408                          add ESP, 4*2
    43                                          
    44 00000026 83F800                          cmp EAX, 0
    45 00000029 0F8487000000                    je print_err
    46                                          
    47 0000002F A3[00000000]                    mov [descriptor_fis], EAX
    48 00000034 BF[AA000000]                    mov EDI, rez
    49                                          
    50                                          bucla:
    51 00000039 60                                  pushad
    52 0000003A FF35[00000000]                      push DWORD [descriptor_fis]
    53 00000040 6A01                                push DWORD 1
    54 00000042 6A01                                push DWORD 1
    55 00000044 68[04000000]                        push DWORD buffer
    56 00000049 FF15[00000000]                      call [fread]
    57 0000004F 83C410                              add ESP, 4*4
    58 00000052 83F800                              cmp EAX, 0
    59 00000055 744E                                je clean_up
    60 00000057 61                                  popad
    61 00000058 A0[04000000]                        mov AL, [buffer]
    62 0000005D 3C20                                cmp AL, ' '
    63 0000005F 7405                                je print_cuv
    64 00000061 AA                                  stosb
    65 00000062 FEC2                                inc DL
    66 00000064 EB3D                                jmp again
    67                                              print_cuv:
    68 00000066 66B80000                                mov AX, 0
    69 0000006A 88D0                                    mov AL, DL
    70 0000006C 6698                                    cbw
    71 0000006E B202                                    mov DL, 2
    72 00000070 F6F2                                    div DL
    73 00000072 80FC00                                  cmp AH, 0
    74 00000075 7515                                    jne jump
    75 00000077 60                                      pushad
    76 00000078 68[AA000000]                            push DWORD rez
    77 0000007D 68[84000000]                            push DWORD mod_print
    78 00000082 FF15[00000000]                          call [printf]
    79 00000088 83C408                                  add ESP, 4*2 
    80 0000008B 61                                      popad
    81                                                  jump:
    82 0000008C B800000000                              mov EAX, 0
    83 00000091 BF[AA000000]                            mov EDI, rez
    84                                                  clear:
    85 00000096 8A1C07                                      mov BL, [EDI + EAX]
    86 00000099 C6040700                                    mov [EDI + EAX], BYTE 0
    87 0000009D 40                                          inc EAX
    88 0000009E 80FB00                                      cmp BL, 0
    89 000000A1 75F3                                        jne clear
    90                                              again:
    91                                              
    92 000000A3 EB94                            jmp bucla
    93                                          
    94                                          clean_up:
    95 000000A5 FF35[00000000]                      push DWORD [descriptor_fis]
    96 000000AB FF15[00000000]                      call [fclose]
    97 000000B1 83C404                              add ESP, 4*1
    98                                              
    99 000000B4 EB0E                            jmp final
   100                                          print_err:
   101 000000B6 68[89000000]                        push DWORD eroare_
   102 000000BB FF15[00000000]                      call [printf]
   103 000000C1 83C404                              add ESP, 4*1
   104                                          final:
   105 000000C4 6A00                            push    dword 0      
   106 000000C6 FF15[00000000]                  call    [exit]       
