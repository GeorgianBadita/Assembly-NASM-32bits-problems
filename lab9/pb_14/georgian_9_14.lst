     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit, fopen, fclose, fprintf, printf   
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 414345535441204553-         text db "ACESTA ESTE UN text perfectr !!@%!!~~PeNTRU PB MEA", 0
    16 00000009 544520554E20746578-
    16 00000012 742070657266656374-
    16 0000001B 72202121402521217E-
    16 00000024 7E50654E5452552050-
    16 0000002D 42204D454100       
    17                                      len equ $ - text
    18 00000033 00<rept>                    rez times len db 0
    19 00000066 7700                        mod_acces db "w", 0
    20 00000068 696E7075742E747874-         nume_fisier db "input.txt", 0
    20 00000071 00                 
    21 00000072 257300                      format_print db "%s", 0
    22 00000075 FFFFFFFF                    descriptor_fisier dd -1
    23                                  
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 B933000000                      mov ECX, len            ;punem valoarea lungimii sirului in ECX
    27 00000005 BE[00000000]                    mov ESI, text           ;punem adresa de inceput a textului in ESI
    28 0000000A BF[33000000]                    mov EDI, rez            ;punem adresa de inceput a rezultatului in EDI
    29                                          repeta:
    30 0000000F AC                                  lodsb               ;punem in AL, caracterul curent
    31 00000010 3C41                                cmp AL, 41h
    32 00000012 7D02                                jge cmp_Z
    33 00000014 EB0A                                jmp base
    34                                              cmp_Z:
    35 00000016 3C5A                                    cmp AL, 5Ah
    36 00000018 7C02                                    jnge is_big_lett
    37 0000001A EB04                                    jmp base
    38                                                  is_big_lett:
    39 0000001C 0420                                        add AL, 32
    40 0000001E EB00                                        jmp base
    41                                              base:
    42 00000020 AA                                      stosb
    43 00000021 E2EC                                    loop repeta
    44                                          
    45 00000023 68[66000000]                    push DWORD mod_acces
    46 00000028 68[68000000]                    push DWORD nume_fisier
    47 0000002D FF15[00000000]                  call [fopen]
    48 00000033 83C408                          add ESP, 4*2
    49                                          
    50 00000036 83F800                          cmp EAX, 0
    51 00000039 7428                            je final
    52                                           
    53 0000003B A3[75000000]                     mov [descriptor_fisier], EAX
    54                                           
    55 00000040 68[33000000]                     push DWORD rez
    56 00000045 FF35[75000000]                   push DWORD [descriptor_fisier]
    57 0000004B FF15[00000000]                   call [fprintf]
    58 00000051 83C408                           add ESP, 4*2
    59                                           
    60 00000054 FF35[75000000]                   push DWORD [descriptor_fisier]
    61 0000005A FF15[00000000]                   call [fclose]
    62 00000060 83C404                           add ESP, 4*1
    63                                           
    64                                          final:
    65 00000063 6A00                            push    dword 0      
    66 00000065 FF15[00000000]                  call    [exit]       
