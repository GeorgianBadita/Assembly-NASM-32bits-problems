     1                                  ;Write a program that reads a decimal number from the keyboard. The number is unsigned, the maximum number of digits before and after the decimal point is 4. Add the value of pi (3.1415) to this number and write the
     2                                  
     3                                  ;Example:
     4                                  ;Input number: 23.543
     5                                  ;File name: result.txt
     6                                  ;Outcome: the file result.txt will contain the string '26.6845'.
     7                                  
     8                                  
     9                                  bits 32
    10                                  
    11                                  
    12                                  global start        
    13                                  
    14                                  
    15                                  extern exit, scanf, fopen, fprintf, fclose, printf
    16                                  import exit msvcrt.dll
    17                                  import scanf msvcrt.dll
    18                                  import fopen msvcrt.dll
    19                                  import fprintf msvcrt.dll
    20                                  import fclose msvcrt.dll
    21                                  import printf msvcrt.dll
    22                                  segment data use32 class=data
    23                                      ; ...
    24 00000000 257300                      format_scan_str db "%s", 0
    25 00000003 256400                      format_print db "%d", 0
    26                                      len equ 20
    27 00000006 FF<rept>                    string times len db -1
    28 0000001A 00                          fract db 0
    29 0000001B 0A                          zece db 10
    30                                  ; our code starts here
    31                                  segment code use32 class=code
    32                                      start:
    33                                         
    34 00000000 68[06000000]                   push DWORD string
    35 00000005 68[00000000]                   push DWORD format_scan_str
    36 0000000A FF15[00000000]                 call [scanf]
    37 00000010 83C408                         add ESP, 4*2
    38                                         
    39                                         ;PI = 3.1415
    40 00000013 B914000000                     mov ECX, len
    41 00000018 BA00000000                     mov EDX, 0
    42 0000001D E311                           jecxz sf_prg
    43                                         repeta:
    44 0000001F 8A82[06000000]                  mov AL, [string + EDX]
    45 00000025 3CFF                            cmp AL, -1
    46 00000027 7407                            je sf_prg
    47 00000029 42                              inc EDX
    48 0000002A 3C2E                            cmp AL, '.'
    49 0000002C 7402                            je sf_prg
    50 0000002E E2EF                        loop repeta
    51                                          
    52                                      
    53                                      sf_prg:
    54                                      
    55 00000030 B814000000                  mov EAX, len
    56 00000035 19C8                        sbb EAX, ECX
    57 00000037 89C1                        mov ECX, EAX
    58 00000039 89CA                        mov EDX, ECX
    59 0000003B B814000000                  mov EAX, len
    60 00000040 19D0                        sbb EAX, EDX
    61 00000042 89C1                        mov ECX, EAX
    62 00000044 42                          inc EDX
    63                                    
    64                                      fract_part:
    65                                      
    66 00000045 A0[1A000000]                    mov AL, [fract]
    67 0000004A F625[1B000000]                  mul BYTE [zece]
    68 00000050 668B82[06000000]                mov BYTE AX,[string + EDX]
    68          ******************       warning: register size specification ignored
    69 00000057 6683D830                        sbb AX, '0'
    70 0000005B 6601D8                          add AX, BX
    71 0000005E 66A3[1A000000]                  mov [fract], AX
    72                                          
    73 00000064 E2DF                        loop fract_part
    74                                      
    75 00000066 A0[1A000000]                mov AL, [fract]
    76 0000006B 6698                        cbw
    77 0000006D 98                          cwde
    78 0000006E 50                          push DWORD EAX
    79 0000006F 68[03000000]                push DWORD format_print
    80 00000074 FF15[00000000]              call [printf]
    81 0000007A 83C408                      add ESP, 4*2
    82                                      
    83 0000007D 6A00                            push    dword 0      
    84 0000007F FF15[00000000]                  call    [exit]      
