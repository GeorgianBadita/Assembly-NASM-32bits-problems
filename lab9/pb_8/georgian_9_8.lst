     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit, printf, fread, fopen, fclose               
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0
    16 00000009 00                 
    17 0000000A 722B00                      mod_access db "r+", 0
    18 0000000D FFFFFFFF                    descriptor_fis dd -1
    19                                      len equ 1
    20 00000011 00                          text times len db 0
    21                                  
    22 00000012 00<rept>                    frq times 27  db 0
    23 0000002D 414243444546474849-         big_L db "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    23 00000036 4A4B4C4D4E4F505152-
    23 0000003F 535455565758595A   
    24 00000047 0000                        max_p db 0, 0
    25 00000049 0000                        nr_ap db 0, 0
    26 0000004B 256300                      format_print db "%c", 0
    27 0000004E 256400                      format_print1 db "%d", 0
    28                                  segment code use32 class=code
    29                                      start:
    30                                          
    31 00000000 BB00000000                      mov EBX, 0
    32 00000005 B800000000                      mov EAX, 0
    33 0000000A 68[0A000000]                    push DWORD mod_access
    34 0000000F 68[00000000]                    push DWORD nume_fisier
    35 00000014 FF15[00000000]                  call [fopen]
    36 0000001A 83C408                          add ESP, 4*2
    37                                          
    38 0000001D 83F800                          cmp EAX, 0
    39 00000020 0F84BF000000                    je final
    40                                          
    41 00000026 A3[0D000000]                    mov [descriptor_fis], EAX
    42                                          
    43                                          bucla:
    44 0000002B FF35[0D000000]                      push DWORD [descriptor_fis]
    45 00000031 6A01                                push DWORD len
    46 00000033 6A01                                push DWORD 1
    47 00000035 68[11000000]                        push DWORD text
    48 0000003A FF15[00000000]                      call [fread]
    49 00000040 83C410                              add ESP, 4*4
    50                                              
    51 00000043 83F800                              cmp EAX, 0
    52 00000046 7426                                je cleanup
    53                                              
    54 00000048 A0[11000000]                        mov AL, [text]
    55 0000004D 3C41                                cmp AL, 41H
    56 0000004F 7D02                                jge test_Z
    57 00000051 EB19                                jmp base
    58                                              test_Z:
    59 00000053 3C5A                                    cmp AL, 5Ah
    60 00000055 7C02                                    jnge is_big
    61 00000057 EB13                                    jmp base
    62                                                  is_big:
    63 00000059 2C41                                        sub AL, 'A'
    64                                                      ;sub AL, '0'
    65 0000005B B400                                        mov AH, 0
    66 0000005D 8B98[12000000]                              mov EBX, [frq + EAX]
    67 00000063 43                                          inc EBX
    68 00000064 8998[12000000]                              mov [frq + EAX], EBX
    69 0000006A EB00                                        jmp base
    70                                                      
    71                                          base:
    72 0000006C EBBD                            jmp bucla
    73                                          
    74                                          cleanup:
    75 0000006E FF35[0D000000]                      push DWORD [descriptor_fis]
    76 00000074 FF15[00000000]                      call [fclose]
    77 0000007A 83C404                              add ESP, 4*1
    78                                              
    79 0000007D A0[12000000]                        mov AL, [frq]
    80 00000082 A2[49000000]                        mov [nr_ap], AL
    81 00000087 B91A000000                          mov ECX, 26
    82 0000008C BB01000000                          mov EBX, 1
    83                                              get_max:
    84 00000091 8A83[12000000]                          mov AL, [frq + EBX]
    85 00000097 8A25[49000000]                          mov AH, [nr_ap]
    86 0000009D 38E0                                    cmp AL, AH
    87 0000009F 7F02                                    jg mai_mare
    88 000000A1 EB0B                                    jmp base1
    89                                                  mai_mare:
    90 000000A3 891D[47000000]                              mov [max_p], EBX
    91 000000A9 A2[49000000]                                mov [nr_ap], AL
    92                                              base1:    
    93 000000AE 43                                  inc EBX
    94 000000AF E2E0                                loop get_max
    95                                              
    96 000000B1 A0[47000000]                        mov AL, [max_p]
    97 000000B6 BB[2D000000]                        mov EBX, big_L
    98 000000BB D7                                  xlat
    99 000000BC 6698                                cbw 
   100 000000BE 98                                  cwde
   101 000000BF 50                                  push DWORD EAX
   102 000000C0 68[4B000000]                        push DWORD format_print
   103 000000C5 FF15[00000000]                      call [printf]
   104 000000CB 83C408                              add ESP, 4*2
   105                                              
   106 000000CE A0[49000000]                        mov AL, [nr_ap]
   107 000000D3 6698                                cbw 
   108 000000D5 98                                  cwde
   109 000000D6 50                                  push DWORD EAX
   110 000000D7 68[4E000000]                        push DWORD format_print1
   111 000000DC FF15[00000000]                      call [printf]
   112 000000E2 83C408                              add ESP, 4*2
   113                                              
   114                                          final:
   115                                          
   116 000000E5 6A00                            push    dword 0      
   117 000000E7 FF15[00000000]                  call    [exit]       
