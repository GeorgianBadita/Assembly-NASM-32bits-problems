     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit, fopen, fprintf, scanf, fclose, printf               
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  
    15                                  
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0
    18 00000009 00                 
    19 0000000A 6100                        mod_access db "a", 0
    20 0000000C FFFFFFFF                    descriptor_fis dd -1
    21 00000010 00<rept>                    numar times 10 db 0
    22 0000001A 257300                      format_read db "%s", 0
    23 0000001D 2000                        space db " ", 0
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ;FILE *f = freopen("input.txt", "w", stdin)
    27 00000000 68[0A000000]                    push DWORD mod_access           ;modul de acces pe stiva
    28 00000005 68[00000000]                    push DWORD nume_fisier          ;numele fisierului pe stiva
    29 0000000A FF15[00000000]                  call [fopen]                    ;apelam functia fopen
    30 00000010 83C408                          add ESP, 4*2                    ;eliberam parametrii de pe stiva
    31                                          
    32 00000013 83F800                          cmp EAX, 0                      
    33 00000016 745C                            je final                        ;daca EAX a returnat eroare sarim la eticheta final;
    34                                          
    35 00000018 A3[0C000000]                    mov [descriptor_fis], EAX       ;salvam valoarea descriptorului de fisier
    36                                          bucla:
    37 0000001D 68[10000000]                        push DWORD numar
    38 00000022 68[1A000000]                        push DWORD format_read
    39 00000027 FF15[00000000]                      call [scanf]
    40 0000002D 83C408                              add ESP, 4*2
    41                                              
    42 00000030 A0[10000000]                        mov AL, BYTE [numar]
    43 00000035 2C30                                sub AL, '0'
    44 00000037 3C00                                cmp AL, 0
    45 00000039 742A                                je cleanup
    46                                              
    47 0000003B 68[10000000]                        push DWORD numar
    48 00000040 FF35[0C000000]                      push DWORD [descriptor_fis]
    49 00000046 FF15[00000000]                      call [fprintf]
    50 0000004C 83C408                              add ESP, 4*2
    51                                              
    52 0000004F 68[1D000000]                        push DWORD space
    53 00000054 FF35[0C000000]                      push DWORD [descriptor_fis]
    54 0000005A FF15[00000000]                      call [fprintf]
    55 00000060 83C408                              add ESP, 4*2
    56 00000063 EBB8                            jmp bucla
    57                                          
    58                                          cleanup:
    59 00000065 FF35[0C000000]                      push DWORD [descriptor_fis]
    60 0000006B FF15[00000000]                      call [fclose]
    61 00000071 83C404                              add ESP, 4*1
    62                                          
    63                                          final:
    64 00000074 6A00                            push    dword 0      
    65 00000076 FF15[00000000]                  call    [exit]       
