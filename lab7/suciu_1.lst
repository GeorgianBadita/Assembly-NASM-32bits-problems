     1                                  ;Given two strings of words, a and b, obtain a third string c in the following way: concatenate the string of the least significant bytes from the words of the first string with the string of most significant bytes 
     2                                  
     3                                  bits 32
     4                                  
     5                                  
     6                                  global start        
     7                                  
     8                                  
     9                                  extern exit              
    10                                  import exit msvcrt.dll
    11                                  segment data use32 class=data
    12 00000000 341278569000                a dw 1234h, 5678h, 90h
    13                                      lenA equ ($ - a)/2
    14 00000006 0400CDAB10002211            b dw 4h, 0abcdh, 10h, 1122h
    15                                      lenB equ ($ - b) / 2
    16 0000000E 00<rept>                    dest times lenA + lenB db 0
    17 00000015 00<rept>                    c times lenA + lenB db 0
    18 0000001C 00000000                    saveSort dd 0
    19 00000020 00                          aux db 0
    20                                  ;c should be 34h, 78h, 90h, 00h, abh, 00h, 11h
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 BE[00000000]                    mov esi, a 
    25 00000005 BB00000000                      mov ebx, 0 ;contorul pt sirul nostru
    26 0000000A FC                              cld ;parcurgem sirul de la stanga la dreapta
    27 0000000B B903000000                      mov ecx, lenA ;parcurgem elementele sirului cu un loop de lenA ori
    28                                          repeta:
    29 00000010 AC                                  lodsb ;in al vom avea octetul cel mai putin al cuvantulu din sir
    30 00000011 8883[0E000000]                      mov [dest + ebx], al
    31 00000017 43                                  inc ebx
    32 00000018 AC                                  lodsb
    33 00000019 E2F5                            loop repeta
    34                                          
    35 0000001B BE[06000000]                    mov esi, b
    36 00000020 FC                              cld 
    37 00000021 AC                              lodsb
    38 00000022 AC                              lodsb
    39 00000023 8883[0E000000]                  mov [dest + ebx], al
    40 00000029 43                              inc ebx
    41 0000002A B903000000                      mov ecx, lenB - 1 ;parcurgem de lenB ori
    42                                          repeta1:
    43 0000002F AC                                  lodsb
    44 00000030 AC                                  lodsb
    45 00000031 8883[0E000000]                      mov [dest + ebx], al
    46 00000037 43                                  inc ebx
    47 00000038 E2F5                            loop repeta1
    48                                          
    49 0000003A B907000000                      mov ECX, lenA + lenB
    50 0000003F 49                              dec ECX
    51                                          nextScan:
    52 00000040 89CB                                mov EBX, ECX
    53 00000042 BE00000000                          mov ESI, 0
    54                                          nextComp:
    55 00000047 8A86[0E000000]                      mov AL, [dest + ESI]
    56 0000004D 8A96[0F000000]                      mov DL, [dest + ESI + 1]
    57 00000053 38D0                                cmp AL, DL
    58 00000055 720C                                jc noSwap
    59 00000057 8896[0E000000]                      mov [dest + ESI], DL
    60 0000005D 8886[0F000000]                      mov [dest + ESI + 1], AL
    61                                          noSwap:
    62 00000063 46                                  inc ESI
    63 00000064 4B                                  dec EBX
    64 00000065 75E0                                jnz nextComp
    65 00000067 E2D7                            loop nextScan
    66                                         
    67                                          
    68 00000069 6A00                            push    dword 0      
    69 0000006B FF15[00000000]                  call    [exit]      
    70                                  
    71                                          
