     1                                  ;se citeste de la tatatura un nume de fisier, un car special s si un nr n, fisierul are cuv separate prin spatii
     2                                  ;sa se scrie in output.txt primele n caractere din fiecare cuvant, daca nr car < n cuvantul se va completa cu car special s
     3                                  ;input.txt mere +, n = 6 (mere++)
     4                                  bits 32 
     5                                  
     6                                  
     7                                  global start        
     8                                  
     9                                  
    10                                  extern exit, fopen, fclose, scanf, fprintf, fread, printf           
    11                                  import exit msvcrt.dll    
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                  import scanf msvcrt.dll
    16                                  import fread msvcrt.dll
    17                                  import printf msvcrt.dll
    18                                  
    19                                  segment data use32 class=data
    20                                      ; ...
    21                                      len equ 100
    22                                      len_fis equ 20
    23 00000000 FFFFFFFF                    descriptor_fis1 dd -1
    24 00000004 00<rept>                    nume_fisier times len_fis db 0
    25 00000018 7200                        mod_access db "r", 0
    26 0000001A 7700                        mod_access1 db "w", 0
    27 0000001C 257300                      fmt_read_str db "%s", 0
    28 0000001F 257300                      fmt_read_char db "%s", 0
    29 00000022 256400                      fmt_read_int db "%d", 0
    30 00000025 45726F617265206C61-         msg_err db "Eroare la deschiderea fisierului", 0
    30 0000002E 206465736368696465-
    30 00000037 726561206669736965-
    30 00000040 72756C756900       
    31 00000046 00                          chr db 0
    32 00000047 00                          n db 0
    33 00000048 00                          buffer db 0
    34 00000049 00<rept>                    cuv times len_fis db 0
    35 0000005D FFFFFFFF                    descriptor_fis2 dd -1
    36 00000061 6F75747075742E7478-         nume_fisier2 db "output.txt", 0
    36 0000006A 7400               
    37                                  
    38                                  
    39                                  segment code use32 class=code
    40                                      start:
    41                                           
    42 00000000 68[04000000]                     push DWORD nume_fisier
    43 00000005 68[1C000000]                     push DWORD fmt_read_str
    44 0000000A FF15[00000000]                   call [scanf]
    45 00000010 83C408                           add ESP, 4*2
    46                                          
    47                                           
    48 00000013 68[46000000]                     push DWORD chr
    49 00000018 68[1F000000]                     push DWORD fmt_read_char
    50 0000001D FF15[00000000]                   call [scanf]
    51 00000023 83C408                           add ESP, 4*2
    52                                           
    53                                           
    54 00000026 68[47000000]                     push DWORD n
    55 0000002B 68[22000000]                     push DWORD fmt_read_int
    56 00000030 FF15[00000000]                   call [scanf]
    57 00000036 83C408                           add ESP, 4*2
    58                                           
    59                                          
    60 00000039 68[18000000]                     push DWORD mod_access
    61 0000003E 68[04000000]                     push DWORD nume_fisier
    62 00000043 FF15[00000000]                   call [fopen]
    63 00000049 83C408                           add ESP, 4*2
    64                                           
    65 0000004C 83F800                           cmp EAX, 0
    66 0000004F 0F842A010000                     je err_
    67                                           
    68 00000055 A3[00000000]                     mov [descriptor_fis1], EAX
    69 0000005A BF[49000000]                     mov EDI, cuv
    70                                           
    71 0000005F 68[1A000000]                     push DWORD mod_access1
    72 00000064 68[61000000]                     push DWORD nume_fisier2
    73 00000069 FF15[00000000]                   call [fopen]
    74 0000006F 83C408                           add ESP, 4*2
    75 00000072 A3[5D000000]                     mov [descriptor_fis2], EAX
    76                                           
    77                                           bucla:
    78 00000077 FF35[00000000]                      push DWORD [descriptor_fis1]
    79 0000007D 6A01                                push DWORD 1
    80 0000007F 6A01                                push DWORD 1
    81 00000081 68[48000000]                        push DWORD buffer
    82 00000086 FF15[00000000]                      call [fread]
    83 0000008C 83C410                              add ESP, 4*4
    84 0000008F 83F800                              cmp EAX, 0
    85 00000092 0F84C7000000                        je clean_up
    86                                              
    87 00000098 A0[48000000]                        mov AL, [buffer]
    88 0000009D 3C20                                cmp AL, ' '
    89 0000009F 7406                                je prt_cuv
    90 000000A1 AA                                  stosb
    91 000000A2 E9B3000000                          jmp again
    92                                              prt_cuv:
    93                                                  
    94 000000A7 B800000000                              mov EAX, 0
    95 000000AC A0[47000000]                            mov AL, [n]
    96 000000B1 C680[49000000]00                        mov [cuv + EAX], BYTE 0
    97 000000B8 BE[49000000]                            mov ESI, cuv
    98 000000BD B800000000                              mov EAX, 0
    99 000000C2 A0[47000000]                            mov AL, [n]
   100 000000C7 89C1                                    mov ECX, EAX
   101 000000C9 B800000000                              mov EAX, 0
   102                                                  repet:
   103 000000CE 8A1C06                                      mov BL, [ESI + EAX]
   104 000000D1 80FB00                                      cmp BL, 0
   105 000000D4 7402                                        je put_special
   106 000000D6 EB09                                        jmp to_loop
   107                                                      put_special:
   108 000000D8 8A3D[46000000]                                  mov BH, [chr]
   109 000000DE 883C06                                          mov [ESI + EAX], BH
   110                                                      to_loop:
   111 000000E1 40                                          inc EAX
   112 000000E2 E2EA                                    loop repet
   113 000000E4 B800000000                              mov EAX, 0
   114 000000E9 A0[47000000]                            mov AL, [n]
   115 000000EE C680[49000000]20                        mov [cuv + EAX], BYTE 20h
   116 000000F5 83C001                                  add EAX, 1
   117 000000F8 C680[49000000]00                        mov [cuv + EAX], BYTE 0
   118 000000FF 68[49000000]                            push DWORD cuv
   119 00000104 FF35[5D000000]                          push DWORD  [descriptor_fis2]
   120 0000010A FF15[00000000]                          call [fprintf]
   121 00000110 83C408                                  add ESP, 4*2
   122 00000113 BB00000000                              mov EBX, 0
   123 00000118 BF[49000000]                            mov EDI, cuv
   124                                                  clear:
   125 0000011D 8A83[49000000]                              mov AL, [cuv + EBX]
   126 00000123 C683[49000000]00                            mov [cuv + EBX], BYTE 0
   127 0000012A 43                                          inc EBX
   128 0000012B 3C00                                        cmp AL, 0
   129 0000012D 75EE                                        jne clear
   130                                                 clear_spaces:
   131 0000012F FF35[00000000]                          push DWORD [descriptor_fis1]
   132 00000135 6A01                                    push DWORD 1
   133 00000137 6A01                                    push DWORD 1
   134 00000139 68[48000000]                            push DWORD buffer
   135 0000013E FF15[00000000]                          call [fread]
   136 00000144 83C410                                  add ESP, 4*4
   137 00000147 83F800                                  cmp EAX, 0
   138 0000014A 7413                                    je clean_up
   139 0000014C A0[48000000]                            mov AL, [buffer]
   140 00000151 3C20                                    cmp AL, ' '
   141 00000153 7502                                    jne do_this
   142 00000155 EBD8                                    jmp clear_spaces
   143                                                  do_this:
   144 00000157 AA                                          stosb
   145 00000158 EB00                                        jmp again
   146                                                  
   147                                              
   148                                           again:   
   149 0000015A E918FFFFFF                       jmp bucla
   150                                           
   151                                           clean_up:
   152 0000015F FF35[5D000000]                      push DWORD [descriptor_fis2]
   153 00000165 FF15[00000000]                      call [fclose]
   154 0000016B 83C404                              add ESP, 4*1
   155                                  
   156                                              
   157 0000016E FF35[00000000]                      push DWORD [descriptor_fis1]
   158 00000174 FF15[00000000]                      call [fclose]
   159 0000017A 83C404                              add ESP, 4*1
   160                                           
   161 0000017D EB0E                             jmp final
   162                                           err_:
   163 0000017F 68[25000000]                     push DWORD msg_err
   164 00000184 FF15[00000000]                   call [printf]
   165 0000018A 83C404                           add ESP, 4*1
   166                                           final:
   167                                          
   168 0000018D 6A00                            push    dword 0      
   169 0000018F FF15[00000000]                  call    [exit]       
