     1                                  ;Badita Marin-Georgian, gr. 211, 10.10.2017, problema 1 set1 adunari-scaderi 
     2                                  ;calculul expresiei c - (a + d) + (b + d)
     3                                  
     4                                  bits 32 ; assembling for the 32 bits architecture
     5                                  
     6                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     7                                  global start        
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 0A                              a db 10
    17 00000001 15                              b db 21
    18 00000002 7D                              c db 125
    19 00000003 0B                              d db 11
    20                                      
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 A0[00000000]                    mov AL, [a] ; AL = a
    25 00000005 0205[03000000]                  add AL, [d] ; AL = AL + d = (a + d)
    26                                          
    27 0000000B 8A15[01000000]                  mov DL, [b] ; DL = b
    28 00000011 0215[03000000]                  add DL, [d] ; DL = DL + d = (b + d)
    29                                          
    30 00000017 00D0                            add AL, DL ; AL = AL + DL = (a + d) + (b + d)
    31                                          
    32 00000019 8A15[02000000]                  mov DL, [c] ; DL = c
    33                                          
    34 0000001F 28C2                            sub DL, AL ;  DL = DL - AL = c - (a + d) + (b + d)
    35                                          
    36                                          ; exit(0)
    37 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
