     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0C                          a db 12
    15 00000001 0D                          b db 13
    16 00000002 0B00                        d dw 11
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A0[00000000]                    mov AL, [a]
    23 00000005 8A25[00000000]                  mov AH, [a]
    24 0000000B F6E4                            mul AH
    25                                          
    26 0000000D 66BA0000                        mov DX, 0
    27 00000011 6629C2                          sub DX, AX
    28                                          
    29 00000014 A0[01000000]                    mov AL, [b]
    30 00000019 2C01                            sub AL, 1
    31 0000001B B402                            mov AH, 2
    32                                          
    33 0000001D F6E4                            mul AH
    34                                          
    35 0000001F 6601D0                          add AX, DX
    36 00000022 662B05[02000000]                sub AX, [d]
    37                                          
    38                                          ; exit(0)
    39 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
