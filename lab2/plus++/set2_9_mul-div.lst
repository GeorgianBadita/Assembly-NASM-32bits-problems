     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 05                          a db 5
    15 00000001 09                          b db 9
    16 00000002 07                          c db 7
    17 00000003 03                          d db 3
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 8A25[00000000]                  mov AH, [a]; AH = a
    24 00000006 A0[01000000]                    mov AL, [b]; AL = b
    25                                          
    26 0000000B 2A05[02000000]                  sub AL, [c]; AL = b - c
    27 00000011 00C4                            add AH, AL; a +( b - c )
    28                                          
    29 00000013 88E0                            mov AL, AH; AL = AH
    30 00000015 B603                            mov DH, 3; DH = 3
    31 00000017 F6E6                            mul DH; AX = AL*DH = AL * 3 = (a +(b-c))*3
    32                                      
    33                                          ; exit(0)
    34 00000019 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 0000001B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
